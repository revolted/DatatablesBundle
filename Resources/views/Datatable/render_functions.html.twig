<script>
    function render_boolean(data, type, row, meta, trueIcon, falseIcon, trueLabel, falseLabel) {
        if ("" == trueIcon && "" == trueLabel) {
            trueLabel = "true";
        }

        if ("" == falseIcon && "" == falseLabel) {
            falseLabel = "false";
        }

        if (data == true) {
            return "<span class='" + trueIcon + "'></span> " + trueLabel;
        } else {
            return "<span class='" + falseIcon + "'></span> " + falseLabel;
        }
    }

    function render_datetime(data, type, row, meta, dateFormat) {
        if (data != null && typeof data.timestamp != "undefined") {
            moment.locale("{{ app.request.locale }}");
            return moment.unix(data.timestamp).format(dateFormat);
        } else {
            return null;
        }
    }

    function render_timeago(data, type, row, meta) {
        if (data != null && typeof data.timestamp != "undefined") {
            moment.locale("{{ app.request.locale }}");
            return moment.unix(data.timestamp).fromNow();
        } else {
            return null;
        }
    }

    function render_icon(data, type, row, meta) {
        if (data != null) {
            return '<i class="icon-ban-circle" title="Cancel"></i>';
        }
    }

    function render_squaremeter(data, type, row, meta) {
        if (data != null) {
            return data + 'm²';
        }
    }

    function render_price(data, type, row, meta) {
        if (data != null) {
            return '€ '+data.formatMoney(0, ',', '.')+',-';
        }
    }

    Number.prototype.formatMoney = function(c, d, t){
        var n = this,
                c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? "." : d,
                t = t == undefined ? "," : t,
                s = n < 0 ? "-" : "",
                i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
                j = (j = i.length) > 3 ? j % 3 : 0;
        return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    };
</script>